# Note: Template blocks require a 'weight' parameter so they're correctly ordered on the landing page

# Hero
hero:
  enable: true
  weight: 10
  template: hero

  backgroundImage:
    path: "images/templates/hero"
    filename:
      desktop: "gradient-desktop.webp"
      mobile: "gradient-mobile.webp"

  badge:
    text: v0.0.0
    color: primary # primary, secondary, success, danger, warning, info, light, dark
    pill: false # boolean
    soft: true # boolean

  titleLogo:
  path: "images/logos"
  filename: "logo.svg"
  height: 80px

  title: "CloudNativeFolks"
  subtitle: "Demestifying Cloud Native Technology"

  image:
    path: "images" # path to image under configured assets directory. default 'images'
    filename: "cloudnativefolks-landscape.png" # filename of your hero image (including file extension)
    alt: "CloudNativeFolks" # Optional but recommended
    boxShadow: true # default 'false' (excludes .svg images)
    rounded: true # round the image corners? default 'false' (excludes .svg images)

  # ctaButton:
  # icon: rocket_launch
  # btnText: "Get Started"
  # url: "/docs/"

  cta2Button:
    icon: chat
    btnText: "CloudNativeFolks Community "
    url: "https://discord.gg/NQspwGBDVs"

  info: "**Open Source** | **Community Driven** "

# Feature Grid
featureGrid:
  enable: true
  weight: 20
  template: feature grid

  title: Why choose Cloud Native Folks?
  subtitle: Learn Cloud Native Technolgy In Core .

  items:
    - title: Serverless Computing
      icon: üöÄ
      description: Serverless computing is a cloud-computing execution model in which the cloud provider runs the server, and dynamically manages the allocation of machine resources. Pricing is based on the actual amount of resources consumed by an application, rather than on pre-purchased units of capacity.


    - title: API Gateway
      icon: üåê
      description: An API gateway is an API management tool that sits between a client and a collection of backend services. An API gateway acts as a reverse proxy to accept all application programming interface (API) calls, aggregate the various services required to fulfill them, and return the appropriate result.

    - title: Continous Integration and Continous Deployment
      icon: üîÑ
      description: Continuous integration (CI) and continuous deployment (CD) embody a culture, set of operating principles, and collection of practices that enable application development teams to deliver code changes more frequently and reliably.

    - title: Infrastructure as Code
      icon: üèóÔ∏è
      description: Infrastructure as code (IaC) is the process of managing and provisioning computer data centers through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools.
    
    - title: configuration management
      icon: üõ†Ô∏è
      description: Configuration management (CM) is a systems engineering process for establishing and maintaining consistency of a product's performance, functional, and physical attributes with its requirements, design, and operational information throughout its life.
    
    - title: Observability and Monitoring
      icon: üëÄ
      description: Observability is a measure of how well internal states of a system can be inferred from knowledge of its external outputs. It helps to understand the system's behavior and performance.
    
    - title: Cloud Native Storage
      icon: üóÑÔ∏è
      description: Cloud-native storage is a term used to describe storage that is designed to work with cloud-native applications. It is a storage solution that is built to work with modern, cloud-based applications and is designed to be scalable, resilient, and flexible.
 
    - title: Remote Procedure Call
      icon: üì°
      description: Remote procedure call (RPC) is an inter-process communication technique to allow client and server software to communicate across a network. The RPC protocol is a request‚Äìresponse protocol. An RPC is initiated by the client, which sends a request message to a known remote server to execute a specified procedure with supplied parameters.

    - title: Service Proxy
      icon: üöö
      description: A service proxy is a service that acts as an intermediary between a client and a server, providing a single access point for multiple services. It is a design pattern that allows a single service to act as a proxy for multiple services, providing a single point of access to multiple services.

    - title: Cloud Native Networking
      icon: üåê
      description: Cloud-native networking is a term used to describe networking that is designed to work with cloud-native applications. It is a networking solution that is built to work with modern, cloud-based applications and is designed to be scalable, resilient, and flexible.

    - title: Security & Compliance
      icon: üîí
      description: Security and compliance are critical components of any cloud-native application. Security is the practice of protecting systems, networks, and programs from digital attacks. Compliance is the practice of ensuring that systems, networks, and programs are in compliance with industry standards and regulations.

    - title: Distributed tracing
      icon: üìà
      description: Distributed tracing is a method used to profile and monitor applications, especially those built using a microservices architecture. Distributed tracing helps pinpoint where failures occur and what causes poor performance.       